#!/bin/bash
#
# set-i3-layout
#
# Set proper workspace layout for i3 desktop
#
# Copyright (C) 2015, 2016 Gabriel Szasz <gabriel.szasz1@gmail.com>
#
# This program is free software: you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation, either version 3 of the License, or (at your option) any later
# version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along with
# this program.  If not, see <http://www.gnu.org/licenses/>.
#

# Temporary file for the xrandr query
xrandr_query_file=/tmp/xrandr-query

# Temporary file for the docked mode status
docked_mode_status_file=/tmp/docked-mode-status

# Scan available outputs
xrandr --query > $xrandr_query_file

# Get status of laptop Mini DisplayPort
minidp=$(grep 'DP-0' $xrandr_query_file | cut -d ' ' -f 2)
# Get status of laptop Mini DisplayPort + HDMI adaptor
minidp_hdmi=$(grep 'HDMI-0' $xrandr_query_file | cut -d ' ' -f 2)
# Get status of laptop VGA port (internal DisplayPort 1 converted into analog VGA output)
vga=$(grep 'DP-1' $xrandr_query_file | cut -d ' ' -f 2)

# Check if laptop has been already connected to docking station
if grep --quiet 'DP-1-[1-9]' $xrandr_query_file; then
    #
    # Laptop has been connected to docking station already
    #

    # Get status of dock DisplayPort 1 (coupled with HDMI 1.4 output)
    dock_dp1=$(grep 'DP-1-1' $xrandr_query_file | cut -d ' ' -f 2)
    # Get status of dock DisplayPort 2 (coupled with dual-link DVI output)
    dock_dp2=$(grep 'DP-1-2' $xrandr_query_file | cut -d ' ' -f 2)
    # Get status of dock VGA port (internal DisplayPort 3 converted into analog VGA output)
    dock_vga=$(grep 'DP-1-3' $xrandr_query_file | cut -d ' ' -f 2)
else
    #
    # Laptop hasn't been conected to docking station yet
    #

    # Set status of dock DisplayPort 1 (coupled with HDMI 1.4 output)
    dock_dp1="disconnected"
    # Set status of dock DisplayPort 2 (coupled with dual-link DVI output)
    dock_dp2="disconnected"
    # Set status of dock DisplayPort 2 (coupled with dual-link DVI output)
    dock_vga="disconnected"
fi

# Check actual docked mode status
if [ ! -f $docked_mode_status_file ]; then
    if [[ $dock_dp1 == "connected" || $dock_dp2 == "connected" || $dock_vga == "connected" || \
        $minidp == "connected" || $minidp_hdmi == "connected" || $vga == "connected" ]]; then
        docked_mode="ON"
    else
        docked_mode="OFF"
    fi
    echo $docked_mode > $docked_mode_status_file
    chown gszasz:gszasz $docked_mode_status_file
else
    docked_mode=$(cat $docked_mode_status_file)
fi

if [[ $docked_mode == "ON" ]]; then
    if [[ $dock_dp1 == "connected" && $dock_dp2 == "connected" ]]; then
        # My docking station, two screens - first connected to DP-2 (DVI) and second to DP-1 (DisplayPort)
        i3-msg -q 'workspace1; move workspace to output eDP-0'
        i3-msg -q 'workspace2; move workspace to output DP-1-2'
        i3-msg -q 'workspace3; move workspace to output DP-1-1'
    elif [[ $dock_dp1 == "connected" && $dock_dp2 == "disconnected" && $dock_vga == "disconnected" ]]; then
        # Guest docking station, single screen connected to DP-1 (first DisplayPort or HDMI)
        i3-msg -q 'workspace1; move workspace to output eDP-0'
        i3-msg -q 'workspace2; move workspace to output DP-1-1'
        i3-msg -q 'workspace3; move workspace to output DP-1-1'
    elif [[ $dock_dp1 == "disconnected" && $dock_dp2 == "connected" && $dock_vga == "disconnected" ]]; then
        # Guest docking station, single screen connected to DP-2 (second DisplayPort or DVI)
        i3-msg -q 'workspace1; move workspace to output eDP-0'
        i3-msg -q 'workspace2; move workspace to output DP-1-2'
        i3-msg -q 'workspace3; move workspace to output DP-1-2'
    elif [[ $dock_dp1 == "disconnected" && $dock_dp2 == "disconnected" && $dock_vga == "connected" ]]; then
        # Guest docking station, single screen connected to VGA port
        i3-msg -q 'workspace1; move workspace to output eDP-0'
        i3-msg -q 'workspace2; move workspace to output DP-1-3'
        notify-send -u low "Docked Mode" "ON"
    elif [[ $minidp == "connected" ]]; then
        # No docking station, single screen connected to laptop DisplayPort
        i3-msg -q 'workspace1; move workspace to output eDP-0'
        i3-msg -q 'workspace2; move workspace to output DP-0'
        i3-msg -q 'workspace3; move workspace to output DP-0'
    elif [[ $minidp_hdmi == "connected" ]]; then
        # No docking station, single screen connected to laptop DisplayPort via HDMI adapter
        xrandr --output HDMI-0 --right-of eDP-0 --auto --primary
        i3-msg -q 'workspace1; move workspace to output eDP-0'
        i3-msg -q 'workspace2; move workspace to output HDMI-0'
        i3-msg -q 'workspace3; move workspace to output HDMI-0'
    elif [[ $vga == "connected" ]]; then
        # No docking station, single screen connected to laptop VGA port
        i3-msg -q 'workspace1; move workspace to output eDP-0'
        i3-msg -q 'workspace2; move workspace to output DP-1'
        i3-msg -q 'workspace3; move workspace to output DP-1'
    fi
fi

# Remove temporary file containing xrandr query
rm -f $xrandr_query_file
